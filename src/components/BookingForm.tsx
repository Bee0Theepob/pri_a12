"use client"; // ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ directive ‡∏ô‡∏µ‡πâ

import React, { useState } from "react";
import TextField from "@mui/material/TextField";
import Select, { SelectChangeEvent } from "@mui/material/Select";
import MenuItem from "@mui/material/MenuItem";
import DateReserve from "@/components/DateReserve"; // ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ß‡πà‡∏≤ DateReserve ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô components
import { useDispatch } from "react-redux";
import { addBooking } from "@/redux/features/bookSlice"; // ‡∏õ‡∏£‡∏±‡∏ö path ‡∏ï‡∏≤‡∏°‡∏à‡∏£‡∏¥‡∏á
import { BookingItem } from "../../interface"; // ‡∏õ‡∏£‡∏±‡∏ö path ‡∏ï‡∏≤‡∏°‡∏à‡∏£‡∏¥‡∏á

export default function BookingForm() {
  const [nameLastname, setNameLastname] = useState("");
  const [tel, setTel] = useState("");
  const [venue, setVenue] = useState("");
  const [bookDate, setBookDate] = useState(""); // State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏≠‡∏á

  const dispatch = useDispatch();

  const handleVenueChange = (event: SelectChangeEvent<string>) => {
    setVenue(event.target.value);
  };

  // ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ß‡πà‡∏≤ DateReserve ‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏ó‡∏µ‡πà function ‡∏ô‡∏µ‡πâ (‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏±‡∏ö DateReserve ‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤‡∏î‡πâ‡∏ß‡∏¢)
  const handleDateChange = (date: string) => {
    setBookDate(date);
  };

  const handleBook = () => {
    if (nameLastname && tel && venue && bookDate) {
      const newBooking: BookingItem = {
        nameLastname,
        tel,
        venue,
        bookDate,
      };

      // üöÄ ‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç: ‡∏™‡πà‡∏á action ‡πÄ‡∏Ç‡πâ‡∏≤ Redux Store
      dispatch(addBooking(newBooking));

      // Optional: ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏´‡∏£‡∏∑‡∏≠ redirect
      alert(`‡∏à‡∏≠‡∏á ${venue} ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${bookDate} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!`);

      // Optional: ‡∏•‡πâ‡∏≤‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°
      setNameLastname("");
      setTel("");
      setVenue("");
      setBookDate("");
    } else {
      alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô");
    }
  };

  return (
    <div className="flex flex-col space-y-4 w-full max-w-md">
      <TextField
        variant="standard"
        name="Name-Lastname"
        label="Name-Lastname"
        fullWidth
        value={nameLastname}
        onChange={(e) => setNameLastname(e.target.value)}
      />
      <TextField
        variant="standard"
        name="Contact-Number"
        label="Contact-Number"
        fullWidth
        value={tel}
        onChange={(e) => setTel(e.target.value)}
      />
      <Select
        variant="standard"
        id="venue"
        labelId="venue-label"
        value={venue}
        onChange={handleVenueChange}
        displayEmpty
        fullWidth
      >
        <MenuItem value="" disabled>
          ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Venue
        </MenuItem>
        <MenuItem value="Bloom">The Bloom Pavilion</MenuItem>
        <MenuItem value="Spark">Spark Space</MenuItem>
        <MenuItem value="GrandTable">The Grand Table</MenuItem>
      </Select>

      {/* ‚ö†Ô∏è ‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏±‡∏ö DateReserve ‡πÉ‡∏´‡πâ‡∏£‡∏±‡∏ö prop onChange ‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏Å handleDateChange */}
      <DateReserve onDateChange={handleDateChange} />

      <button
        name="Book Venue"
        className="block rounded-md bg-sky-600 hover:bg-indigo-600 px-3 py-2 text-white shadow-sm"
        onClick={handleBook} // üöÄ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ function handleBook ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°
      >
        Book Venue
      </button>
    </div>
  );
}
